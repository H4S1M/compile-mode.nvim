#+title: compile-mode.nvim
#+author: EJ Shafran

* DONE Add goto error message outputs
  CLOSED: [2023-10-29 Sun 01:30]
* DONE Place previous command in vim.o or vim.g
  CLOSED: [2023-10-29 Sun 01:36]
* DONE Support split modifier
  CLOSED: [2023-10-29 Sun 01:42]
* DONE Configure compilation buffer name
  CLOSED: [2023-10-29 Sun 01:48]
* DONE Configure highlight colors
  CLOSED: [2023-11-04 Sat 19:40]
* DONE Configure highlight of text that starts with `:`
  CLOSED: [2023-11-04 Sat 19:43]
* DONE Goto error - patterns for different compilation types
  CLOSED: [2023-11-03 Fri 21:08]
* DONE Goto error - go to a certain line and column
  CLOSED: [2023-11-03 Fri 21:08]
* DONE Goto error - next error and previous error
  CLOSED: [2023-11-04 Sat 19:40]
* DONE Goto error - customize patterns
  CLOSED: [2023-11-13 Mon 21:56]
* DONE Goto error - use less ugly colors
  CLOSED: [2023-11-03 Fri 23:16]
* DONE Refactoring - use plenary async for vim.schedule
  CLOSED: [2023-10-29 Sun 01:49]
* DONE Refactoring - extract keymap handler for <CR>
  CLOSED: [2023-10-29 Sun 01:49]
* DONE Add highlights for lines starting with `Text:`
  CLOSED: [2023-10-17 Tue 03:13]
* DONE Update README/docs
  CLOSED: [2023-11-13 Mon 22:47]
** DONE Add `Compilation Buffer` section
   CLOSED: [2023-11-13 Mon 22:47]
** DONE Add `Goto Error` section
   CLOSED: [2023-11-13 Mon 22:47]
* DONE Organize code
  CLOSED: [2023-11-04 Sat 19:40]
* DONE Add tests, at some point
  CLOSED: [2023-11-13 Mon 21:56]
* DONE Add compilation-hidden-output
  CLOSED: [2023-11-13 Mon 22:15]

* DONE Add CurrentError command
  CLOSED: [2024-05-21 Tue 23:50]

* DONE Add QuickfixErrors command
  CLOSED: [2024-05-22 Wed 17:11]

* TODO Add diagnostic windows
  As configuration option, probably

* TODO Add option not to split at all if more than certain amount of windows
  Maybe `window_threshold`, or something of the sort

* DONE Add CompilationNext{Error,File} and CompilationPrev{Error,File}
  CLOSED: [2024-06-16 Sun 05:16]

* TODO Add auto-jump to first error option

* TODO Add ask about save before compiling

* TODO Add compilation environment

* TODO Parse entering/leaving directory messages

** TODO Use for highlighting

** TODO Use for determining relative paths

* TODO Add ask-to-interrupt

* TODO Add checks for segfault or termination

* TODO Move logic to compilation ftplugin

* TODO Allow skipping/jumping forward several errors

* DONE Implement all of the additional highlights
  CLOSED: [2024-06-16 Sun 09:34]

  #+begin_src elisp
  (defvar compilation-mode-font-lock-keywords
   '(;; configure output lines.
     ("^[Cc]hecking \\(?:[Ff]or \\|[Ii]f \\|[Ww]hether \\(?:to \\)?\\)?\\(.+\\)\\.\\.\\. *\\(?:(cached) *\\)?\\(\\(yes\\(?: .+\\)?\\)\\|no\\|\\(.*\\)\\)$"
      (1 font-lock-variable-name-face)
      (2 (compilation-face '(4 . 3))))
     ;; Command output lines.  Recognize `make[n]:' lines too.
     ("^\\([[:alnum:]_/.+-]+\\)\\(\\[\\([0-9]+\\)\\]\\)?[ \t]*:"
      (1 font-lock-function-name-face) (3 compilation-line-face nil t))
     (" --?o\\(?:utfile\\|utput\\)?[= ]\\(\\S +\\)" . 1)
     ("^Compilation \\(finished\\).*"
      (0 '(face nil compilation-message nil help-echo nil mouse-face nil) t)
      (1 compilation-info-face))
     ("^Compilation \\(exited abnormally\\|interrupt\\|killed\\|terminated\\|segmentation fault\\)\\(?:.*with code \\([0-9]+\\)\\)?.*"
      (0 '(face nil compilation-message nil help-echo nil mouse-face nil) t)
      (1 compilation-error-face)
      (2 compilation-error-face nil t)))
   "Additional things to highlight in Compilation mode.
This gets tacked on the end of the generated expressions.")
  #+end_src

* TODO Highlight line when jumping to error

  Probably as configuration option.

* TODO Update docs to use language similar to Emacs docs

* DONE Remove Baleia support
  CLOSED: [2024-06-16 Sun 09:34]

* DONE Refactor =get_error_line=-based functions
  CLOSED: [2024-06-16 Sun 05:33]

